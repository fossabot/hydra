%!PS-Adobe-3.0 EPSF-3.0
%%Title: hydra_block_revA.ps
%%Creator: XCircuit v3.8 rev40
%%CreationDate: Fri Sep 20 09:57:54 2013
%%Pages: 1
%%BoundingBox: 68 68 828 532
%%DocumentNeededResources: font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.8
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%
%%BeginResource: procset XCIRCproc 3.8 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 384 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def /Tabs
	0 array def /fscale 1.0 def /kY 0 def gsave dup 1 add copy dup
	1 0 dtransform exch atan rotate {exch dup type /stringtype eq {gsave
        dup gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop
	exch pop exch pop grestore currentpoint pop add twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat exch pop
	pathbbox grestore 3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup


%%EndSetup

%%Page: hydra_block_revA 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1324 672 translate

0 1.000 -832 32 -832 224 -544 224 -544 32 4 polygon
(controller) {CR} (SPI) {/Times-Roman cf} 4 21 0 0.700 -688 128 label
0 1.000 -832 384 -832 576 -544 576 -544 384 4 polygon
(DAC) {/Times-Roman cf} 2 21 0 0.700 -688 480 label
0 1.000 -448 384 -448 576 -160 576 -160 384 4 polygon
(ADC) {/Times-Roman cf} 2 21 0 0.700 -304 480 label
0 1.000 -64 384 -64 576 224 576 224 384 4 polygon
(Reference) {CR} (Voltage) {CR} (Bandgap/) {/Times-Roman cf} 6 21 0 0.700 80 
480 label
0 1.000 320 384 320 576 608 576 608 384 4 polygon
(LDO) {/Times-Roman cf} 2 21 0 0.700 464 480 label
0 1.000 320 -320 320 -128 608 -128 608 -320 4 polygon
(PWM Core) {/Times-Roman cf} 2 21 0 0.700 464 -224 label
0 1.000 -64 -320 -64 -128 224 -128 224 -320 4 polygon
(Reset) {CR} (Poweron) {/Times-Roman cf} 4 21 0 0.700 -272 128 label
0 1.000 -448 -320 -448 -128 -160 -128 -160 -320 4 polygon
(Op Amp) {/Times-Roman cf} 2 21 360 0.700 -304 -224 label
0 1.000 -832 -320 -832 -128 -544 -128 -544 -320 4 polygon
(Sense) {CR} (Temperature) {/Times-Roman cf} 4 21 0 0.700 -688 -224 label
0 1.000 -1024 240 -1024 304 -960 304 -960 240 4 polygon
0 1.000 -1024 144 -1024 208 -960 208 -960 144 4 polygon
0 1.000 -1024 48 -1024 112 -960 112 -960 48 4 polygon
0 1.000 -1024 -48 -1024 16 -960 16 -960 -48 4 polygon
(SDI) {/Times-Roman cf} 2 23 0 0.700 -1056 272 label
(SDO) {/Times-Roman cf} 2 23 0 0.700 -1056 176 label
(SCK) {/Times-Roman cf} 2 23 0 0.700 -1056 80 label
(CSB) {/Times-Roman cf} 2 23 0 0.700 -1056 -16 label
1 1.000 -960 272 -896 272 -896 176 -832 176 4 polygon
1 1.000 -960 176 -928 176 -928 144 -832 144 4 polygon
1 1.000 -960 80 -928 80 -928 112 -832 112 4 polygon
1 1.000 -960 -16 -896 -16 -896 80 -832 80 4 polygon
0 1.000 704 160 704 224 768 224 768 160 4 polygon
0 1.000 704 32 704 96 768 96 768 32 4 polygon
0 1.000 368 672 368 736 432 736 432 672 4 polygon
0 1.000 496 672 496 736 560 736 560 672 4 polygon
0 1.000 -16 672 -16 736 48 736 48 672 4 polygon
0 1.000 112 672 112 736 176 736 176 672 4 polygon
0 1.000 -400 672 -400 736 -336 736 -336 672 4 polygon
0 1.000 -272 672 -272 736 -208 736 -208 672 4 polygon
0 1.000 -784 672 -784 736 -720 736 -720 672 4 polygon
0 1.000 -656 672 -656 736 -592 736 -592 672 4 polygon
0 1.000 368 -480 368 -416 432 -416 432 -480 4 polygon
0 1.000 496 -480 496 -416 560 -416 560 -480 4 polygon
0 1.000 -16 -480 -16 -416 48 -416 48 -480 4 polygon
0 1.000 112 -480 112 -416 176 -416 176 -480 4 polygon
0 1.000 -400 -480 -400 -416 -336 -416 -336 -480 4 polygon
0 1.000 -272 -480 -272 -416 -208 -416 -208 -480 4 polygon
0 1.000 -784 -480 -784 -416 -720 -416 -720 -480 4 polygon
0 1.000 -656 -480 -656 -416 -592 -416 -592 -480 4 polygon
0 1.000 704 -96 704 -32 768 -32 768 -96 4 polygon
0 1.000 704 -224 704 -160 768 -160 768 -224 4 polygon
0 1.000 704 288 704 352 768 352 768 288 4 polygon
0 1.000 704 416 704 480 768 480 768 416 4 polygon
0 1.000 320 32 320 224 608 224 608 32 4 polygon
(Reference) {CR} (Current) {/Times-Roman cf} 4 21 0 0.700 464 128 label
0 1.000 -416 32 -416 224 -128 224 -128 32 4 polygon
(Buffer) {CR} (Input) {/Times-Roman cf} 4 21 0 0.700 80 -224 label
0 1.000 -1024 672 -1024 736 -960 736 -960 672 4 polygon
0 1.000 -1024 -480 -1024 -416 -960 -416 -960 -480 4 polygon
0 1.000 704 -480 704 -416 768 -416 768 -480 4 polygon
0 1.000 -1024 -208 -1024 -144 -960 -144 -960 -208 4 polygon
0 1.000 704 672 704 736 768 736 768 672 4 polygon
0 1.000 -1024 400 -1024 464 -960 464 -960 400 4 polygon
(dVDD) {/Times-Roman cf} 2 23 0 0.700 -1056 432 label
(dGND) {/Times-Roman cf} 2 23 0 0.700 -1056 -176 label
0 1.000 -32 32 -32 224 128 224 128 32 4 polygon
(Oscillator) {CR} (Ring) {/Times-Roman cf} 4 21 0 0.700 48 128 label
1 1.000 -128 144 -32 144 2 polygon
1 1.000 -128 128 -32 128 2 polygon
1 1.000 -544 144 -416 144 2 polygon
1 1.000 -544 128 -416 128 2 polygon
1 1.000 -544 208 -496 208 -496 304 -688 304 -688 384 5 polygon
1 1.000 -544 192 -480 192 -480 304 -288 304 -288 384 5 polygon
1 1.000 -544 176 -464 176 -464 288 80 288 80 384 5 polygon
1 1.000 -544 160 -448 160 -448 272 464 272 464 384 5 polygon
1 1.000 -544 112 -448 112 -448 -16 256 -16 256 128 320 128 6 polygon
1 1.000 -544 96 -464 96 -464 -32 464 -32 464 -128 5 polygon
1 1.000 -544 80 -480 80 -480 -48 64 -48 64 -128 5 polygon
1 1.000 -544 64 -496 64 -496 -64 -304 -64 -304 -128 5 polygon
1 1.000 -544 48 -512 48 -512 -64 -688 -64 -688 -128 5 polygon
1 1.000 -752 -416 -752 -320 2 polygon
(aGND) {/Times-Roman cf} 2 20 0 0.700 800 -192 label
(aVDD) {/Times-Roman cf} 2 20 0 0.700 800 448 label
1 1.000 -624 -416 -624 -320 2 polygon
1 1.000 -368 -416 -368 -320 2 polygon
1 1.000 -240 -416 -240 -320 2 polygon
1 1.000 16 -416 16 -320 2 polygon
1 1.000 144 -416 144 -320 2 polygon
1 1.000 400 -416 400 -320 2 polygon
1 1.000 528 -416 528 -320 2 polygon
1 1.000 528 576 528 672 2 polygon
1 1.000 400 576 400 672 2 polygon
1 1.000 144 576 144 672 2 polygon
1 1.000 16 576 16 672 2 polygon
1 1.000 -240 576 -240 672 2 polygon
1 1.000 -368 576 -368 672 2 polygon
1 1.000 -624 576 -624 672 2 polygon
1 1.000 -752 576 -752 672 2 polygon
1 1.000 608 64 704 64 2 polygon
1 1.000 608 192 704 192 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
